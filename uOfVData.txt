uOfV[0] = """
Ziel des Moduls TGI ist das Kennenlernen und Verstehen der Architektur und der allgemeinen Funktionsweise von Computersystemen. Inhalte sind insbesondere technische Grundlagen wie Zahlendarstellung und Boolesche Algebra, Digitale Logik und Rechnerarchitekturen; daneben wird auch auf die historische Entwicklung der Informatik eingegangen. Ein Ausblick auf aktuelle Entwicklungen im Bereich Quantencomputing beschließt die Vorlesung.
Die Vorlesung findet in geblockter Form statt und besteht im aktuellen Semester aus neun (wöchentlichen) Einheiten mit jeweils 4-5 Lernvideos, die jeweils für mindestens 10 Tage online zur Verfügung gestellt werden (Themenliste siehe unten). Die Vorlesung selbst findet als Präsenzeinheit statt. Das Wissen wird in den zugehörigen Repetitorien praktisch vertieft (Teilnahme empfohlen, separate Anmeldung notwendig).
Weitere Details werden in der Vorbesprechung bzw. auf Moodle bekanntgegeben.
Vorlesungsinhalte:
1. BIT
Zahlensysteme
Rechnen mit Binärzahlen
Negative Binärzahlen
Festkomma- und Gleitkommazahlen
Rundungsfehleranalyse
2. LOGIK
Wahrheitswerte
Gesetze der Booleschen Algebra
Normalformen
KV-Diagramme
Fuzzy-Logik
3. TRANSISTOR
Logische Zustände
Halbleiter
Transistoren
CMOS
4. GATTERSCHALTUNG
Gatter
Halb- und Volladdierer
Carry-Ripple-Addierer
Multiplizierer
Multiplexer & Decoder
ALU
5. SPEICHER
ROM
Latches & FlipFlops
SRAM & DRAM
Speicheraufbau
6. PROZESSOR
Amdahl's Gesetz
Abstraktionsebenen
Prozessorarchitektur
Prozessorperformance
7. CACHE & CO.
Paging
Caching
Cache-Performance
Cache-Organisation
Sekundärspeicher
8. ARCHITEKTUR
Rechnerarchitekturen
Pipelining
Superskalare Architekturen
Multicore & Multi-CPU
9. QUANTENCOMPUTING
Qubits
Quantengatter
Verschränkung
Teleportation
Quantenalgorithmen
"""

uOfV[1] = """
DETAILS (ACHUTNG: Alle Materialien, Kurse, Links etc. sind NUR FÜR STUDIERENDE VERFÜGBAR, DIE ZUM REPETITORIUM ANGEMELDET SIND):
- Im Repetitorium werden großteils praktische Übungsaufgaben zu den jeweiligen Kapiteln behandelt: zu Beginn jedes Kapitels wird ein eigenes Übungsblatt auf Moodle verfügbar gemacht.
- Diese Beispiele sollen mit Hilfe der Vorlesungsvideos und der Vorlesungsfolien selbstständig ausgearbeitet und auf Moodle hochgeladen werden.
- (Online) Repetitorium "Kahoot-Quizzes" (Donnerstagnachmittag): Mithilfe interaktiver und gamifizierten Multiple-Choice Quizzes werden Beispiele zum aktuellen Kapitel (nicht die Übungsaufgaben an sich) gemeinsam besprochen. Hybrides Format: Teilnahme im Hörsaal oder alternativ über Stream möglich.
- Vorort Kleingruppen (freitags): Hier werden die Übungsbeispiele von Studierenden präsentiert und gemeinsam besprochen. Präsenzformat in Kleingruppen.
- Zusätzlich werden die Lösungen der Übungsaufgaben in eigenen Lösungsvideos detailliert erklärt (nur verfügbar, wenn Sie zu einem Repetitorium angemeldet sind).
"""

uOfV[2] = """
Die Studierenden kennen und verstehen elementare Grundbegriffe und Grundkonzepte der mathematischen Grundlagen der Informatik aus den Bereichen Mengenlehre, Arithmetik und Algebra, lineare Algebra und analytische Geometrie, diskrete Mathematik, Graphentheorie.
Darüber hinaus können sie diese Konzepte in der Modellierung und Analyse von ausgewählten Problemstellungen der Informatik und in der Entwicklung von entsprechenden Lösungsmethoden anwenden. Querbezüge zu ausgewählten Anwendungsbereichen der mathematischen Konzepte in der Informatik werden hergestellt.
WICHTIG:
Begleitend zur Vorlesung und als Vorbereitung auf die Prüfung wird der Besuch der angebotenen PUEs (prüfungsvorbereitenden Übungen, Repetitorien) sehr empfohlen! Für die PUEs ist eine Anmeldung innerhalb der Anmeldefrist erforderlich. Die aktive Mitarbeit in einer PUE dient dazu, die Inhalte der Vorlesung in konkreten Aufgabenstellungen anzuwenden und das Verständnis zu vertiefen. Durch laufende Mitarbeit im Semester wird die Basis für eine gute Prüfungsvorbereitung gelegt.
Die Vorlesung wird vor Ort im Hörsaal 1, Währinger Straße 29 1.UG U1.32 abgehalten. Es wird ein stream zur Verfügung gestellt (sowohl live als auch zeitversetzt). Falls unvorhergesehen einzelne Vorlesungstermine vollständig online abgehalten werden müssen, dann gibt es dazu immer aktuelle Informationen auf Moodle.
"""

uOfV[3] = """
WICHTIG:
Die Prüfungsvorbereitende Übung (PUE) Repetitorium Mathematische Grundlagen der Informatik 1 ist ein Angebot an die Studierenden. Sie ist NICHT Teil des Studienplans und daher fakultativ. Es wird jedoch dringend empfohlen, die PUE zu belegen und aktiv mitzuarbeiten, da dies der Vorbereitung auf die Modulprüfung Mathematische Grundlagen der Informatik 1 dient. Wer sich dazu entscheidet, an der PUE anzumelden, muss gewisse Mindestleistungen erbringen, um die Veranstaltung positiv zu absolvieren.
ACHTUNG: Die Anwesenheit in der Vorbesprechung der korrekten PUE-Gruppe ist unbedingt erforderlich! - egal ob man bereits einen Platz hat, auf der Warteliste steht oder nachträglich angemeldet werden möchte. Wer bei der Vorbesprechung nicht anwesend ist, verliert seinen/ihren Platzanspruch und wird abgemeldet!
Ziel des gesamten Moduls Mathematische Grundlagen der Informatik 1 ist es, dass die Studierenden grundlegende mathematische Werkzeuge und Methoden kennenlernen, verstehen und anwenden können. Inhalte sind elementare Grundbegriffe und Grundkonzepte der mathematischen Grundlagen der Informatik aus den Bereichen Mengenlehre, Arithmetik und Algebra, lineare Algebra und analytische Geometrie, diskrete Mathematik. Das Ziel der PUE Repetitorium Mathematische Grundlagen der Informatik 1 ist es, die in der Vorlesung (VO) vermittelten Inhalte in schriftlichen Aufgaben zu üben und anzuwenden sowie auf die Modulprüfung vorzubereiten. Diese Ziele sind nur durch aktive Teilnahme an der PUE und durch selbstständige Beschäftigung mit den gestellten Aufgaben erreichbar.
Die PUE ist grundsätzlich in Präsenz (vor Ort) angelegt, es können aber einzelne Einheiten möglicherweise auch hybrid oder vollständig online abgehalten werden - beachten Sie dazu unbedingt die aktuellen Informationen auf Moodle. Ebenso ist es möglich, dass manche PUE-Gruppen oder einzelne Einheiten in englischer Sprache abgehalten werden. Achten Sie daher bei der Anmeldung/Vormerkung in u:find auf die entsprechenden Kennzeichnungen - Änderungen im laufenden Semester werden rechtzeitig in Moodle bekanntgegeben.
"""

uOfV[4] = """
Einführung in die Methoden und Anwendungsgebiete von ausgewählten Themen der Theoretischen Informatik.
Ziele: Die Studierenden kennen die Grundlagen formaler Logik, die verschiedenen Arten von formalen Grammatiken und Automaten, die Zusammenhänge zwischen Grammatiken und Automaten (Chomsky-Hierarchie) und die Grundlagen der Berechenbarkeits- und Komplexitätstheorie. Ferner können sie Logik als Spezifikationssprache anwenden, und formale Sprachen mittels formaler Grammatiken und Automaten beschreiben.
Inhalte: Einführung in die formale Logik; Aussagenlogik; Prädikatenlogik; logische Programmierung; kontextfreie Sprachen und Grammatiken; reguläre Sprachen und endliche Automaten; Kellerautomaten; Turing Maschinen; Berechenbarkeit und Entscheidbarkeit; Komplexität
In den Vorlesungseinheiten werden die VO Inhalte von den Vortragenden mit Folien und an der Tafel aufbereitet. Ergänzend werden Übungsblätter zu den Vorlesungsinhalten auf der Lernplattform bereitgestellt. Diese sind von den Studierenden selbstständig zu bearbeiten und werden in den begleitenden Repetitorien besprochen.
"""

uOfV[5] = """
Das Repetitorium Theoretische Informatik ist begleitend zur gleichnamigen Vorlesung. Das Ziel des Repetitoriums besteht darin, die in der Vorlesung vermittelten Inhalte anhand von vorgegebenen Übungsaufgaben praktisch zu üben und umzusetzen.
Das Repetitorium ist nicht Teil des Curriculums, ein Besuch wird aber nachdrücklich empfohlen.
Folgende Vorteile ergeben sich unter anderem durch den Besuch der Repetitorien:
- Stoffwiederholung: Anhand von praktischen Beispielen wird der Stoff der Vorlesung wiederholt und vertieft.
- Kleingruppen: Möglichkeit, in kleineren Gruppen gezielte Fragen zu Beispielen oder Themengebieten zu stellen.
- Prüfungsvorbereitung: Die in den Repetitorien behandelten Beispiele sind vom selben Typ wie die praktischen Aufgaben die bei der Prüfung gestellt werden.
Inhalte des Moduls Theoretische Informatik:
Einführung in die formale Logik; Aussagenlogik; Prädikatenlogik; logische Programmierung; kontextfreie Sprachen und Grammatiken; reguläre Sprachen und endliche Automaten; Kellerautomaten; Turing Maschinen; Berechenbarkeit und Entscheidbarkeit; Komplexität
"""

uOfV[6] = """
Es finden über das Semester verteilt drei praktische Tests statt. Diese sind als Präsenzveranstaltungen vor Ort zu absolvieren. Es sind dabei jeweils die bisher in den Übungen erarbeiteten Programme leicht zu ändern bzw. zu erweitern. In jedem der Tests können bis zu vier Punkte erreicht werden und es dürfen nur die von der LV-Leitung zur Verfügung gestellten, bzw. explizit freigegebenen Unterlagen verwendet werden.
Optional werden zwei kleine Programmierprojekte angeboten, für deren ordnungsgemäße Fertigstellung jeweils ein Punkt vergeben wird. Um einen dieser Punkte zu erhalten, muss das entsprechende, eigenständig erstellte Programm (eine automatische Plagiatsüberprüfung wird durchgeführt) bis zur festgelegten Frist auf der Webseite der LV hochgeladen werden.
Für Studierende, die an Testterminen während des Semesters nicht teilnehmen können, werden vor dem Beginn des nächsten Semesters zwei Nachtermine angeboten. Jeder Nachtermin bietet eine Möglichkeit, einen der drei Tests nachträglich abzulegen. Wenn nachweislich keiner der Termine aus wichtigen Gründen (z. B. Erkrankung) wahrgenommen werden kann, dann gilt dies als wichtiger Grund für einen Abbruch der Lehrveranstaltung. Die Nachtermine können auch zur Verbesserung der Note verwendet werden. Die jeweils beste Leistung zählt. Die Möglichkeit zum Nachholen von Prüfungen und zur Notenverbesserung besteht aber nur im Rahmen der vorgesehenen Nachtermine. Zusätzliche Termine werden nicht angeboten, auch wenn Studierende die vorgesehenen Termine versäumt haben.
"""
uOfV[7] = """Dieser Modul vermittelt die für Informatiker/-innen notwendigen Grundlagen der Methoden der Modellierung statischer und dynamischer Aspekte.
Im Rahmen der Lehrveranstaltung werden folgende Inhalte vermittelt:
- Ziele und Modus der Lehrveranstaltung
TEIL 1:
- Was ist Modellierung, Modellbegriff, Übersicht und Einführung in die Themen
- Daten-, Objekt-, Prozessorientierte Modellierung, Ontologien, Semantische Datenmodelle
- ER-Modell
- UML - u.a. Anwendungsfall-, Klassen-, Aktivitäts-, Zustands-, Sequenz-, Paket-, Komponenten-, und Verteilungsdiagramme
TEIL 2:
- Von Diagrammen zu Modellen
- Modellierung: Vorgehen und Techniken
- BPMN
- DMN
- EPK
- Petri Netze
- Wert von Modellen/Simulation/Transformation z.B. RDF, SQL
Studierende eignen sich in der LV grundlegendes Basiswissen an, damit sie die Abstraktionsfähigkeiten erlernen, die für das Design und die Entwicklung von Informationssystemen notwendig sind. Ziel des Moduls ist der Erwerb der Fähigkeit, die vermittelten Konzepte zu Modellierungstechniken zu verstehen, Modelle in beliebigen Anwendungsbereichen zu erstellen und zu analysieren.
**ORGANISATORISCHER ABLAUF:
Die Lehrveranstaltung besteht aus zwei Komponenten, einem konzeptionellen Teil und einem auf Tutorials basierenden Übungsteil. Der konzeptionelle Teil wird an für alle Gruppen gemeinsamen LV-Terminen jeweils am Dienstag (13:15) und Mittwoch (9:45) abgehalten. Der auf Tutorial basierende Übungsteil wird für jede Gruppe an bestimmten separaten Terminen (i.d.R. 2 am Montag, 2 am Dienstag) abgehalten. Die Studienleistung wird durch 5 Tests überprüft, deren Termine sind für alle Gruppen identisch. Details der Termingestaltung und eventuell erforderliche Anpassungen werden in der LV bekannt gegeben. Das Terminschema wird für jede Gruppe online in Moodle abrufbar sein, sobald die Gesamtanzahl der Teilnehmer feststeht, da dies die nötigen HS-Größen bestimmt. (siehe Anmerkung zum Abschnitt Termine der jeweiligen Gruppe)."
"""
uOfV[8] = """Goal of this lecture is to understand and be able to apply the most important concepts of modern operating systems.
The textbook is used to explain why operating systems are necessary to use computers and what services they provide to application software. In addition, students understand what security risks must be addressed by operating systems because many processes and different users simultaneously use a system with shared resources."""
uOfV[9] = """Ziel dieser UE ist, die wichtigsten Konzepte und Ideen moderner Betriebssysteme zu verstehen und praktisch anwenden zu können. Neben der Funktionsweise grundlegender Betriebssystemstrukturen vertiefen wir die Kenntnisse in den vier großen Teilgebieten Prozessmanagement, Memory-Management (Hauptspeicher), Storage-Management (Festspeicher) und Betriebssystemsicherheit.
Der Besuch der zugehörigen VO Betriebssysteme (051021) wird dringend empfohlen."""
uOfV[10] = """In this course students will acquire knowledge of basic data structures, search and sorting algorithms as well as basic graph and optimization algorithms. Students will learn how to estimate the costs of an algorithm using complexity measures. The goal is to design algorithms and data structures for a given problem and learn how to assess its performance.
Contents:
1. Introduction
2. Sorting
3. Lists
4. Hashing
5. Trees
6. Graphs
The course will be taught in English and German. There will be exercises, which students can solve independently. Solutions to these exercises will be discussed in a tutorial that takes place online at a time slot students will vote for during the first week. While being voluntary, we strongly recommend to attend the tutorial, as it will help to internalize the concepts discussed in the course.
Prerequisites for this course are basic knowledge in mathematics and programming in C++, as taught in the StEOP."""
uOfV[11] = """This course is about building systems that can perform well in uncertain situations without prescribing the optimal behavior. To this end the course covers the fundamentals as well as state-of-the-art methods for building probabilistic artificial intelligence systems like Bayesian modeling, variational inference, generative models (variational auto encoders, diffusion models), and reinforcement learning.
Programming assignments complement the lectures. Upon successful participation in the course, students will understand the fundamentals of probabilistic artifical intelligence, know how to apply basic methods in theory and practice, and will have the ability to connect to current research."""
uOfV[12] = """Verwenden Sie für individuelle Anfragen und die Kommunikation mit den LV-LeiterInnen bitte folgende E-Mail-Adresse: swe1.wst@univie.ac.at
Allgemeine Fragen, Fragen zur Übung, Vorlesung, Angaben, Materialien etc. bitte immer auf der Lernplattform im Forum posten damit auch andere Studierende vom Wissensaustausch profitieren.
► Sollten Sie auf der Warteliste sein kommen Sie jedenfalls in die Vorbesprechung und melden sich nach dem Vortrag vorne beim Lehrenden im Hörsaal. Andernfalls ist eine Nachmeldung jedenfalls unmöglich da wir Sie nicht in unsere Semestervorbereitung aufgenommen haben. Nachmeldungen können nicht garantiert werden und hängen vom SSC, Ihrem Studienfortschritt, anderen Studierenden, organisationalen Beschränkungen etc. ab.
► Sollten Sie nicht einmal auf der Warteliste sein 1) kommen Sie jedenfalls in die Vorbesprechung und melden sich nach dem Vortrag vorne beim Lehrenden im Hörsaal und 2) schreiben spätestens am Tag vor der Vorbesprechung an die E-Mail-Adresse des Kurses. Andernfalls ist eine Nachmeldung jedenfalls unmöglich da wir Sie nicht in unseren für die Organisation notwendigen Listen führen würden. Nachmeldungen können nicht garantiert werden und hängen vom SSC, Ihrem Studienfortschritt, anderen Studierenden, organisationalen Beschränkungen etc. ab.
Die VU SE 1 zielt darauf ab einen Überblick über zentrale Konzepte der Softwareentwicklung zu bieten:
► Anforderungsanalyse
► Verifikation, Validierung von Software
► Softwareprojekte
► Softwareentwicklungsprozesse
► Sicherheit in der Softwareentwicklung
► Wartung, Weiterentwicklung, Rollout
► etc.
Hierzu werden die Inhalte theoretisch und/oder praktisch erarbeitet. Weitere Details und Inhalte finden Sie in der Lernplattform unter https://moodle.univie.ac.at/"""
uOfV[13] = """The course provides an overview of the central topics of information security and is intended to provide the basic knowledge that allows IT systems to be defended against cyber-attacks.
The course content is structured as follows:
Introduction
• Setting the stage: IT Security, Information Security, Cyber Security
• Tasks and Purpose
• Challenges
Threat Analysis
• Current situation with the focus on CERT.at Jahresberichte (annual reports), EUROPOL EC3 IOCTA, ENISA Threat Information / Landscape, MITRE Att&ck / D3FEND Framework
• Information Sources / Information Exchange: CVE, CWE, NVD, MISP, STIX/TAXII
Risk Management
• Risk Management – legal obligations and practice of risk management
• (Data) Privacy Impact Assessment (WKO, CNIL)
• CERT OCTAVEInformation Security: Standards, Processes, Management
• Österreichisches Handbuch zur Informationssicherheit (SiHB), Recommendations and Handbooks of WKO, BSI-Grundschutz, Recommendatios of ENISA, NIST Cyber Security Framework (CSF)
• Incident Handling according to SiHB
Technical Aspects of Information Security Deployment: Applications, Networks and Infrastructure, Data
• Firewalls
• Encryption
• SIEM & SOC
Software Security
• OWASP
• Blockchains
Summary and Outlook"""
uOfV[14] = """ The class will provide an introduction into law for students of computer science and will cover a range of topics from data protection law to intellectual property law and regulation of artificial intelligence. Lectures will be held in cooperation with the staff of the Department of Innovation and Digitalisation in Law and therefore some of the lectures will be taught in English.
The lectures will be recorded. However, this excludes the short exercise sessions, which will take place at the end of certain lectures, where the students will be able to ask questions, discuss the topics covered in class with the lecturer, explore some example cases and get insights about questions and topics that can come up in the test.
The following topics will be covered in the lecture:
- The Austrian Legal System
- The European Legal System
- Fundamental Rights
- Data Protection Law
- AI Regulation
- Data Governance
- Platform Law
- Intellectual Property Law
- Contract Law and IT Contracts
- Consumer Law
- Labour Law
- Cyber Criminal Law"""
uOfV[15] = """Ziele: Die Lehrveranstaltung „Informatik und Gesellschaft“ soll die Studierenden dazu anregen, sich mit aktuellen und zukünftigen gesellschaftspolitischen Themen auseinanderzusetzen und deren Einflussfaktoren auf die Informatik einschätzen bzw. beurteilen zu können. Umgekehrt sollen die Einflüsse der Informatik auf die Gesellschaft bewusst wahrgenommen und nachvollzogen werden. Die Teilnehmer*innen sollen die Fähigkeit entwickeln, Situationen nach ethischen, politischen, sozialen, ökonomischen und Sicherheitsfaktoren zu analysieren und dementsprechend zu handeln. Hierzu lernen sie gesellschaftliche Voraussetzungen sowie potentielle Folgen der Informatik/IKT kennen, und können sie vor dem Hintergrund sozial- und geisteswissenschaflicher Theorien erklären.
Inhalte: Einführung in die Technikethik, Roboter- und KI-Ethik, Grundlagen der Technikanalyse und Technikfolgenabschätzung, Einführung in das wissenschaftliche Arbeiten im Fach Informatik, Design Fiction als kritisches ThinkTanking; zum Beispiel anhand der Geschichte der Informatik, sozialer Aspekte der Informatik, Barrierefreiheit, Inklusion, werteorientiertem Design, Ingenieurverantwortung, Nachhaltigkeit, Ökologie und ökonomische Globalisierung, Digital Rights Management, Data Mining, Überwachung, Sicherung der Privatsphäre, E-Waste, Social Engineering, Datendiebstahl, Cyber-Terrorismus, vertrauenswürdiger und fairer KI u.a.
Methoden: Die Veranstaltung folgt einem mehrteiligen Aufbau, einschließlich "Wissenschaftliches Arbeiten in der Informatik". Dabei wechseln sich die Vermittlung theoretischen Stoffs sowie praktisches, gemeinsames und individuelles Arbeitens ab. Das kritische Diskutieren gehört neben schriftlichen Ausarbeitungen und Präsentationen vor der Gruppe zu den Methoden der Vorlesung.
 """
uOfV[16] = """Ziele:
Fachlich:
Nach erfolgreicher Absolvierung der VU besitzen AbsolventInnen folgende fachliche Kompetenzen:
* Sie kennen die Basiskonzepte des klassischen und agilen Managements von Informatik-Projekten und können je nach Charakteristika einer gegebenen Situation passende Methoden auswählen und anpassen.
* Sie können einen Projektantrag und Projektauftrag (inkl. Projektplänen, Umwelt- und Risikoanalyse) für ein kleines Projekt im Team erstellen und die erarbeitete Projekt-Ergebnisse verständlich präsentieren.
* Sie kennen die Unterschiede zwischen klassischen und agilen Methoden.
Überfachlich:
Nach erfolgreicher Absolvierung der VU besitzen AbsolventInnen folgende überfachliche Kompetenzen:
* Sie können ausgewählte Grundsätze der zwischenmenschlichen Kommunikation in Gruppen und Teams zumindest ansatzweise vor ihrem persönlichen Erfahrungshintergrund reflektieren.
* Sie können den Prozess und ihren Beitrag im Team und in der Gruppe reflektieren und einschätzen.
* Sie haben aktiv Erfahrung gesammelt, konstruktives Feedback zu geben und zu empfangen und ihre Wahrnehmung von zwischenmenschlichen Faktoren in Teams geschärft.
Inhalte:
* Management von Projekten mit besonderem Bezug auf Informatik- und interdisziplinäre Projekte
* Projektinitiierung und Anforderungserhebung
* Projektplanung inkl. Strukturierungs- und Organisationstechniken
* Aufwandsschätzung
* Risikoanalyse
* Projektcontrolling
* klassische und agile Methoden
* Arbeiten in/mit Gruppen und Teams; Kommunikation; Konflikte
Methoden:
* Interaktiver Vortrag, Tutorial
* Fachdiskurs in der Gruppe und mit Vertretern aus der Wirtschaft
* Konzipierung und Planung eines Projektes in Teams
* Einzelarbeit zu einer Fachthematik
* Präsentation der erarbeiteten durch Studierende, Feedback
* Online Selbst- bzw. Peer-Evaluation
* Blended Learning """
uOfV[17] = """ Human-Computer Interaction, Human-centered design, usability engineering, universal access, basics of cognitive psychology, motivation, and communication psychology, app programming.
Students are able to design and develop interactive user interfaces that are evaluated by users as usable and interactions are experienced as positive. They can learn and apply digital tools collaboratively and implement them in teams in different contexts. They work on small app development projects that encompass the entire Human Centered Design process. Other methods of design, such as Participatory Design, Inclusive Design will be discussed in contrast. Students will be able to evaluate human-computer interfaces and learn to critically engage with the implications of these technologies. The theories learned will be applied in practice through the development of apps, which will enable students to meet the diverse challenges of digitalization. """
uOfV[18] = """ The students know the basics of one-dimensional and multidimensional analysis and can apply this knowledge independently to simple problems in economics, technology and natural sciences. They are able to efficiently use suitable software tools for modeling, graphing and solving the problems. Students will be able to communicate this knowledge in the context of an oral presentation.
This course builds on the module "MG1 - Mathematical Foundations of Computer Science 1" and assumes mastery of the theory and practice brought there.
In addition to the individual chapters, there are exercise examples that you can use to independently test your knowledge.
Lecture notes and additional materials are made available on the learning platform.
The materials are intended to simplify "taking notes" or to help students prepare before the lecture in order to be able to follow the lecture more easily or to ask thematic questions about the content (in the sense of a "flipped classroom"). These questions can also be asked in the discussion forum and be answerd by students as well as teachers. """
uOfV[19] = """ Die Studierenden kennen die Grundlagen der ein- und mehrdimensionalen Analysis und können diese Kenntnisse auf einfache Fragestellungen in Wirtschaft, Technik und Naturwissenschaften anwenden. Sie sind in der Lage, geeignete Softwarewerkzeuge zur Modellierung, grafischen Darstellung und Lösung der Fragestellungen effizient einzusetzen. Studierende können dieses Wissen im Rahmen einer mündlichen Präsentation vermitteln. Ziel dieser Übung ist es, den Stoff der Vorlesung zu vertiefen und anwenden zu lernen. Es wird überprüft, inwieweit das in der Vorlesung Gelernte umgesetzt werden kann. Weiters sollen Unklarheiten in Bezug auf das Verständnis des Stoffes beseitigt werden."""
uOfV[20] = """Vermittlung grundlegender Methoden und Algorithmen zu verschiedenen Teilbereichen der Modellierung und Optimierung (beispielsweise Differentialgleichungen, Lineare und Nichtlineare Optimierungsverfahren, Metaheuristiken, Zufallszahlen, Markov-Ketten). Gute Kenntnisse der ein- und mehrdimensionalen Differential- und Integralrechnung (im Rahmen des Stoffes der Module MGI1 und MGI2) werden vorausgesetzt."""
uOfV[21] = """Die Studierenden kennen die Techniken, grundlegende Methoden und Algorithmen zu verschiedenen Teilbereichen der Modellierung und Optimierung (beispielsweise Differentialgleichungen, Lineare und Nichtlineare Optimierungsverfahren, Metaheuristiken) und können diese Kenntnisse auf einfache Fragestellungen anwenden.
Sie sind in der Lage, geeignete Softwarewerkzeuge zur Modellierung, grafischen Darstellung und Lösung der Fragestellungen effizient einzusetzen. Studierende können dieses Wissen im Rahmen einer mündlichen Präsentation vermitteln. Ziel dieser Übung ist es, den Stoff der Vorlesung zu vertiefen und anwenden zu lernen. Es wird überprüft, inwieweit das in der Vorlesung Gelernte umgesetzt werden kann. Weiters sollen Unklarheiten in Bezug auf das Verständnis des Stoffes beseitigt werden."""

